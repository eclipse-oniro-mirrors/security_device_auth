# Copyright (C) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../../../../../../tdd_framework.gni")

module_output_path = "device_auth/deviceauth_test"

ohos_unittest("auth_code_import_test") {
  module_out_path = module_output_path

  include_dirs = hals_inc_path
  include_dirs += [
    "${inner_api_path}",
    "${frameworks_path}/inc/standard",
    "${session_manager_path}/inc/session/v2/expand_sub_session/expand_process_lib",
  ]

  include_dirs += [
    "${tdd_framework_path}/tdd_helper/exception_controller/inc",
    "${tdd_framework_path}/tdd_helper/memory_mock/inc",
    "${tdd_framework_path}/tdd_helper/memory_monitor/inc",
  ]

  sources = auth_code_import_files
  sources += [ "auth_code_import_test.cpp" ]

  include_dirs += identity_manager_inc
  include_dirs += [
    "${dev_frameworks_path}/inc",
    "${group_manager_path}/inc",
    "${group_auth_path}/inc",
    "${dev_frameworks_path}/inc/os_account_adapter",
    "${dev_frameworks_path}/inc/plugin_adapter",
    "${protocol_path}/inc/pake_protocol",
    "${data_manager_path}/inc",
    "${session_manager_path}/inc/session/v1",
    "${session_manager_path}/inc/session/v1/compatible_auth_sub_session",
    "${group_auth_path}/inc/account_related_group_auth",
    "${authenticators_path}/inc/account_unrelated/pake_task",
    "${authenticators_path}/inc/account_unrelated",
  ]
  sources += identity_manager_files

  defines = [
    "DEV_AUTH_MEMORY_DEBUG",
    "ENABLE_AUTH_CODE_IMPORT",
  ]

  deps = [
    "${tdd_framework_path}/tdd_helper:device_auth_test_hal",
    "//third_party/cJSON:cjson",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "bounds_checking_function:libsec_shared",
    "hilog:libhilog",
    "huks:libhukssdk",
  ]
}

ohos_unittest("pub_key_exchange_test") {
  module_out_path = module_output_path

  include_dirs = hals_inc_path
  include_dirs += [
    "${inner_api_path}",
    "${frameworks_path}/inc/standard",
    "${session_manager_path}/inc/session/v2/expand_sub_session/expand_process_lib",
  ]

  include_dirs += [
    "${tdd_framework_path}/tdd_helper/exception_controller/inc",
    "${tdd_framework_path}/tdd_helper/memory_mock/inc",
    "${tdd_framework_path}/tdd_helper/memory_monitor/inc",
  ]

  sources = pub_key_exchange_files
  sources += [ "pub_key_exchange_test.cpp" ]

  include_dirs += identity_manager_inc
  include_dirs += [
    "${dev_frameworks_path}/inc",
    "${group_manager_path}/inc",
    "${group_auth_path}/inc",
    "${dev_frameworks_path}/inc/os_account_adapter",
    "${dev_frameworks_path}/inc/plugin_adapter",
    "${protocol_path}/inc/pake_protocol",
    "${data_manager_path}/inc",
    "${session_manager_path}/inc/session/v1",
    "${session_manager_path}/inc/session/v1/compatible_auth_sub_session",
    "${group_auth_path}/inc/account_related_group_auth",
    "${authenticators_path}/inc/account_unrelated/pake_task",
    "${authenticators_path}/inc/account_unrelated",
  ]
  sources += identity_manager_files

  defines = [
    "DEV_AUTH_MEMORY_DEBUG",
    "ENABLE_PUB_KEY_EXCHANGE",
    "DEV_AUTH_FUNC_TEST",
  ]

  deps = [
    "${tdd_framework_path}/tdd_helper:device_auth_test_hal",
    "//third_party/cJSON:cjson",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "bounds_checking_function:libsec_shared",
    "hilog:libhilog",
    "huks:libhukssdk",
  ]
}

ohos_unittest("save_trusted_info_test") {
  module_out_path = module_output_path

  include_dirs = inc_path
  include_dirs += hals_inc_path
  include_dirs += [
    "${inner_api_path}",
    "${data_manager_path}/inc",
    "${dev_frameworks_path}/inc/",
    "${dev_frameworks_path}/inc/hiview_adapter",
    "${frameworks_path}/inc/standard",
    "${group_manager_path}/inc/broadcast_manager",
    "${session_manager_path}/inc/session/v2/expand_sub_session/expand_process_lib",
    "${mk_agree_path}/inc",
    "${privacy_enhancement_path}/inc",
  ]

  include_dirs += [
    "${tdd_framework_path}/tdd_helper/exception_controller/inc",
    "${tdd_framework_path}/tdd_helper/memory_mock/inc",
    "${tdd_framework_path}/tdd_helper/memory_monitor/inc",
    "${tdd_framework_path}/tdd_helper/dev_info_mock/inc",
  ]

  sources = broadcast_manager_mock_files
  sources += database_manager_files
  sources += save_trusted_info_files
  sources += privacy_enhancement_mock_files
  sources += mk_agree_mock_files
  sources += security_label_adapter_files
  sources += [ "${tdd_framework_path}/common/src/os_account_adapter_mock.c" ]
  sources += [ "save_trusted_info_test.cpp" ]

  cflags = [ "-DHILOG_ENABLE" ]

  defines = [
    "DEV_AUTH_MEMORY_DEBUG",
    "ENABLE_SAVE_TRUSTED_INFO",
  ]

  deps = [
    "${tdd_framework_path}/tdd_helper:device_auth_test_hal",
    "//third_party/cJSON:cjson",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "bounds_checking_function:libsec_shared",
    "hilog:libhilog",
    "huks:libhukssdk",
  ]
}
